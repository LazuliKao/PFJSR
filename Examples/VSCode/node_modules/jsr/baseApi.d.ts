//by gxh
//TypeScriptApi for JSR
/**
 * 功能:文件输入流读取一个文本
 * 参数个数：1个
 * 返回值：字符串
 * @param fname 文件路径（相对BDS位置）
 */
declare function fileReadAllText(fname:string)
/**
 * 功能:文件输出流全新写入一个字符串
 * 参数个数：2个
 * 返回值：是否写成功
 * @param fname 文件路径（相对BDS位置）
 * @param content 文本内容
 */
declare function fileWriteAllText(fname:string,content:string)
/**
 * 功能:文件输出流追加一行字符串
 * 参数个数：2个
 * 返回值：是否写成功
 * @param fname 文件路径（相对BDS位置）
 * @param content 追加内容
 */
declare function fileWriteLine(fname:string,content:string)
/**
 * 功能:判断文件是否存在
 * 参数个数：1个
 * 返回值：True - 文件存在，False - 文件不存在
 * @param fname 文件路径（相对BDS位置）
 */
declare function fileExists(fname:string)
/**
 * 功能:删除指定文件
 * 参数个数：1个
 * 返回值：True - 删除文件成功，False - 删除失败
 * @param fname 文件路径（相对BDS位置）
 */
declare function fileDelete(fname:string)
/**
 * 功能:复制指定文件
 * 参数个数：2个
 * 返回值：True - 复制文件成功，False - 复制失败
 * @param from 待复制的文件路径（相对BDS位置）
 * @param to 目标位置（相对BDS位置）
 */
declare function fileCopy(from:string,to:string)
/**
 * 功能:移动指定文件
 * 参数个数：2个
 * 返回值：True - 移动文件成功，False - 移动失败
 * @param from 待移动的文件路径（相对BDS位置）
 * @param to 目标位置（相对BDS位置）
 */
declare function fileMove(from:string,to:string)
/**
 * 功能:创建文件夹
 * 参数个数：1个
 * 返回值：True - 目录创建成功/已存在，False - 创建失败
 * @param dirname 待创建的文件夹路径（相对BDS位置）
 */
declare function dirCreate(dirname:string)
/**
 * 功能:判断文件夹是否存在
 * 参数个数：1个
 * 返回值：True - 文件夹存在，False - 文件夹不存在
 * @param dirname 文件夹路径（相对BDS位置）
 */
declare function dirExists(dirname:string)
/**
 * 功能:删除指定文件夹，如果其中有内容将一并删除
 * 参数个数：1个
 * 返回值：True - 删除文件夹成功，False - 删除失败
 * @param dirname 文件夹路径（相对BDS位置）
 */
declare function dirDelete(dirname:string)
/**
 * 功能:移动指定文件夹
 * 参数个数：2个
 * 返回值：True - 移动文件夹成功，False - 移动失败
 * @param from 待移动的文件夹路径（相对BDS位置）
 * @param to 目标位置（相对BDS位置）
 */
declare function dirMove(from:string,to:string)
/**
 * 功能:调用系统命令提示符执行系统命令
 * 参数个数：2个
 * 返回值：True - 执行成功，False - 执行失败
 * @param cmd 执行的命令
 * @param callback 进程退出后的回调（包含exitcode、执行时间等）
 */
declare function systemCmd(cmd:string,callback:any)
/**
 * 功能:标准输出流打印消息
 * 参数个数：1个
 * 返回值：
 */
declare function log()
/**
 * 功能:返回一个当前时间的字符串
 * 参数个数：0个
 * 返回值：字符串
 */
declare function TimeNow()
/**
 * 功能:存入共享数据
 * 参数个数：2个
 * 返回值：
 * @param key 关键字
 * @param value 共享数据
 */
declare function setShareData(key:string,value:any)
/**
 * 功能:获取共享数据
 * 参数个数：1个
 * 返回值：共享数据
 * @param key 关键字
 */
declare function getShareData(key:string)
/**
 * 功能:删除共享数据
 * 参数个数：1个
 * 返回值：旧数据
 * @param key 关键字
 */
declare function removeShareData(key:string)
/**
 * 功能:发起一个远程HTTP请求
 * 参数个数：4个
 * 返回值：
 * @param urlpath 远程接口路径
 * @param mode 访问方式
 * @param params 附加数据
 * @param func 获取结果回调
 */
declare function request(urlpath:string,mode:string,params:string,func:any)
/**
 * 功能:延时执行一条指令
 * 参数个数：2个
 * 返回值：
 * @param code 待延时执行的指令字符串/函数对象
 * @param millisec 延时毫秒数
 */
declare function setTimeout(code:(() => void)|string,millisec:number)
/**
 * 功能:计时器-循环执行一条指令
 * 参数个数：2个
 * 返回值：开启成功将为计时器id，失败则为-1
 * @param code 循环时执行的指令字符串/函数对象
 * @param millisec 延时毫秒数
 */
declare function setInterval(code:(() => void)|string,millisec:number)
/**
 * 功能:清除计时器
 * 参数个数：1个
 * 返回值：
 * @param id 计时器返回的id
 */
declare function clearInterval(id:number)
/**
 * 功能:创建文件夹
 * 参数个数：1个
 * 返回值：True - 目录创建成功/已存在，False - 创建失败
 * @param dirname 待创建的文件夹路径
 */
declare function mkdir(dirname:string)
/**
 * 功能:获取工作目录
 * 参数个数：0个
 * 返回值：当前应用程序的工作目录
 */
declare function getWorkingPath()
/**
 * 功能:开启一个本地http监听
 * 参数个数：2个
 * 返回值：开启成功将为监听器ID，开启失败则为-1
 */
declare function startLocalHttpListen()
/**
 * 功能:关闭一个http监听
 * 参数个数：1个
 * 返回值：是否关闭成功
 * @param id 待关闭的http监听器ID（通过调用startLocalHttpListen获得的值）
 */
declare function stopLocalHttpListen(id:number)
/**
 * 功能:重设一个监听器的处理函数
 * 参数个数：2个
 * 返回值：是否重设成功
 * @param id 待重设方法的http监听器ID
 * @param func 新的监听处理函数
 */
declare function resetLocalHttpListener(id:number,func:any)
