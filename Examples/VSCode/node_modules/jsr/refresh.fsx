open System.Net
open System.IO
open System.Text.RegularExpressions
(new WebClient()).DownloadFile(
    "https://raw.githubusercontent.com/zhkj-liuxiaohua/BDSJSR2/main/BDSJSR2/netjs/%E5%B8%AE%E5%8A%A9.txt",
    "帮助.txt"
)
let data=File.ReadAllText("帮助.txt")

let 通用数据处理及网络功能=data.IndexOf("通用数据处理及网络功能")
let MC核心玩法相关功能=data.IndexOf("MC核心玩法相关功能")
let MC玩家互动相关功能=data.IndexOf("MC玩家互动相关功能")
let 注册范例=data.IndexOf("注册范例")
let r=new Regex(@"函数名：(?<name>.+?)\r?\n\s*// 功能：(?<fname>.+?)\r?\n\s*// (?<cg>.+?)\r?\n\s*(?:// 参数类型：(?<ct>.+?)\r?\n\s*// 参数详解：(?<cd>.+?)\r?\n\s*)?(// 返回值：(?<fv>.+?)\r?\n\s*)?(?<exam>\[例\].*)?")

//File.WriteAllText("mcApi.d.ts","//by gxh\r\n")
//File.WriteAllText("playerApi.d.ts","//by gxh\r\n")
//for m in r.Matches(data.Remove().Substring(MC玩家互动相关功能)) do
    //let (!+) s= File.AppendAllText("playerApi.d.ts",s+"\r\n")
//for m in r.Matches(data.Remove(MC).Substring(MC)) do
//    let (!+) s= File.AppendAllText(".d.ts",s+"\r\n")
    //for m in r.Matches(data.Remove().Substring()) do
let invoke(xa,xb,xc)=
    File.WriteAllText(xc,"""//by gxh
//TypeScriptApi for JSR
"""
    )
    for m in r.Matches(data.Remove(xa).Substring(xb)) do
        let (!+) s= File.AppendAllText(xc,s+"\r\n")
        let 函数名=m.Groups.["name"].Value
        let 功能=m.Groups.["fname"].Value   
        let 参数个数=m.Groups.["cg"].Value
        let 参数类型=m.Groups.["ct"].Value   
        let 参数详解=m.Groups.["cd"].Value   
        let 返回值=m.Groups.["fv"].Value
        let mutable p=""
        let mutable px=""
        try
            let ctlist=[|
                for x in 参数类型.Split('，',',') do
                    if x.IndexOf("字符串/函数") <> -1 then
                        "(() => void)|string"
                    else if x.IndexOf("字符") <> -1 then
                        "string"
                    else if x.IndexOf("整型") <> -1 then
                        "number"
                    else if x.IndexOf("浮点") <> -1 then
                        "number"
                    else if x.IndexOf("数据") <> -1 then
                        "any"
                    else "any"
            |]
            let clist= [|
                for x in 参数详解.Split('，',',') ->
                    x.Remove(x.IndexOf("-")).Trim()
            |]
            let cdlist= [|
                for x in 参数详解.Split('，',',') ->
                    x.Substring(x.IndexOf("-")+1).Trim()
            |]
            if ctlist.Length > 0 then
                for i=0 to ctlist.Length-1 do
                    if i<>0 then p<-p+","
                    p <- p+clist.[i]+":"+ctlist.[i]
                    px<- px + $"\r\n * @param {clist.[i]} {cdlist.[i]}"
        with _->()
        !+"/**"   
        !+ $" * 功能:{功能}"
        if 返回值|>isNull then
            !+ $" * {参数个数}{px}"
        else
            !+ $" * {参数个数}"
            !+ $" * 返回值：{返回值}{px}"
        !+" */"
        !+ $"declare function {函数名}({p})"
invoke(MC核心玩法相关功能,通用数据处理及网络功能,"baseApi.d.ts")
invoke(MC玩家互动相关功能,MC核心玩法相关功能,"mcApi.d.ts")
invoke(注册范例,MC玩家互动相关功能,"playerApi.d.ts")
